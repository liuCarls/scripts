AngularJS用$provide去定义一个供应商,
这个$provide有5个用来创建供应商的方法：
	constant
	value
	service		====>var s = new myService();
	factory   ====>var f = myFactory()
	provider
	decorator
	
服务会被叫做供应商的东西来定义,可以使用$provide来创建一个供应商
	
	
var app = angular.module('app', []);
app.config(function ($provide) {
  $provide.constant('movieTitle', 'The Matrix');
	//可以是string,number甚至function,它和constant的不同之处在于，
	//它可以被修改，不能被注入到config中，但是它可以被decorator装饰
	$provide.value('movieTitle', 'The Matrix');
	
	//是一个可注入的构造器，在AngularJS中它是单例的，
	//用它在Controller中通信或者共享数据都很合适
	$provide.service('movie', function () {
		this.title = 'The Matrix';
	});
	//是一个可注入的function，它和service的区别就是：
	//factory是普通function，而service是一个构造器(constructor)
	//这样Angular在调用service时会用new关键字，而调用factory时只
	//是调用普通的function，所以factory可以返回任何东西，而service可以不返回
	$provide.factory('movief', function () {
		return {
			title: 'The Matrix';
		}
	});
	//不是provider,它是用来装饰其他provider的，而前面也说过，
	//他不能装饰Constant，因为实际上Constant不是通过provider()方法创建的
	$provide.decorator('movieTitle', function ($delegate) {
		return $delegate + ' - starring Keanu Reeves';
	});
	
});
//provider是他们的老大，上面的几乎(除了constant)都是provider的封装，
//provider必须有一个$get方法，当然也可以说provider是一个可配置的factory
app.provider('moviep', function () {
  var version;
  return {
    setVersion: function (value) {
      version = value;
    },
    $get: function () {
      return {
          title: 'The Matrix' + ' ' + version
      }
    }
  }
});
app.config(function (moviepProvider) {
  movieProvider.setVersion('Reloaded');
});
注意这里config方法注入的是movieProvider，上面定义了一个供应商叫movie，
但是注入到config中不能直接写movie，因为前文讲了注入的那个东西就是服务，
是供应商提供出来的，而config中又只能注入供应商
（两个例外是$provide和$injector），所以用驼峰命名法写成movieProvider，
Angular就会帮你注入它的供应商。

语法糖：
app.constant('movieTitle', 'The Matrix');
app.value('movieTitle', 'The Matrix');
app.service('movie', function () { 2 this.title = 'The Matrix'; 3 });


app.controller('ctrl', function (movieTitle) {
  expect(movieTitle).toEqual('The Matrix');
	expect(movieTitle).toEqual('The Matrix');
	expect(movie.title).toEqual('The Matrix');
	expect(movief.title).toEqual('The Matrix');
	expect(moviep.title).toEqual('The Matrix Reloaded');
	
	expect(movieTitle).toEqual('The Matrix - starring Keanu Reeves');
});

注：
在service里面可以不用返回东西，因为AngularJS会调用new关键字来创建对象